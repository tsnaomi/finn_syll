{"name":"FinnSyll","tagline":"Finnish phonotactic shenanigans","body":"# [§](https://github.com/tsnaomi/finnsyll/generated_pages/new) [finnsyll](https://finnsyll.herokuapp.com/)\r\n----\r\n\r\n## primary goals\r\n- identify unmarked compound boundaries using machine learning\r\n- explore T4 vowel variation using Finnish poetry\r\n\r\n## secondary goals\r\n- integrate syllabifier into Prosodic \r\n- explore variation in Finnish consonant clusters\r\n\r\n## todo list\r\n#### Find all ambiguous vowel sequences in the poetry — distinct from Prosodic — and put it in the Document View, flagging the variations. Remove headers and disclaimers — we just want the poetry. Create a way to keep track of which variation is favored on a line-by-line basis in the Document View (one, all, or none).\r\n\r\n#### syllabifier\r\n* complicate T4 to be insensitive to codas\r\n* split /oy/ and /ay/ sequences in compound detection\r\n* use front/back vowel harmony to detect compound boundaries\r\n* read \"A Parametric Theory of Poetic Meter\" by Hanson and Kiparsky's in *Language* (1996)\r\n\r\n#### webdev\r\n* implement stopword functionality?\r\n* explore other evaluation methods\r\n* when we are satisfied with the syllabifier's performance, syllabify all unseen lemmas\r\n* when creating the data frame, do not create rows for Tokens where Token.freq == 0\r\n\r\n## compound detection\r\n* word length\r\n* the presence of /uo/ and /yö/ sequences word-medially\r\n* splitting /oy/ and /ay/ sequences\r\n* contradictory front/back vowel harmony\r\n\r\n## open questions\r\n* **Is /au/ always ambiguous in unstressed syllables? E.g., \"rakkauden\".**\r\n\r\n## q & a\r\n* **Does the syllabifier always join long vowels?** Yes, this is built into T6.\r\n\r\n## notes\r\n#### Ideally, bad simplex tokens will only include stopwords (7-23-2015)\r\n#### Virtuositeetti (7-22-2015)\r\n*As you know, this is not a compound, but it is syllabified vir.tu.o.si.teet.ti for reasons that are somewhat unclear to me. The usual rule is that any /uo/-sequence is split beyond the first syllable. That may be correct, but in our system that would make lots of mistakes because of undetected compound boundaries. Another possible reason is that the usual rule is wrong and in fact this syllabification is exceptional and based on the related word vir.tu.oo.si where the syllable boundary falls before /oo/ for regular reasons and is \"inherited\" to vir.tu.o.si.teet.ti, i.e., we have opacity.* \r\n\r\nThis syllabifier does assume that the usual rule of /uo/-sequences splitting word-medially is incorrect. Currently, the syllabifier assumes that anytime a /uo/ sequence is found word-medially, this indicates that the word is a compound. In the eyes of our system, then, the syllabifier incorrectly identifies 'virtuositeetti' as a compound because it is exceptional and a stopword. But, because we have only hand-verified compounds that were (at some point) mis-syllabified, we do not have a good, systematic way of detecting words that the syllabifier incorrectly predicts are compounds.\r\n\r\n#### Loppuottelussa, loppuotteluun, etc. (7-22-2015)\r\nThe correct compound boundary is *loppu=ottelu*. As Arto notes, while /uo/ is useful for detecting non-delimited compounds, it is less useful for detecting compound **boundaries**: *The compound structure is loppu=ottelu, so here /uo/ is split and is thus not a reliable cue for a word-initial cluster. Interestingly, we know that the compound structure cannot be lop=puottelu because the first part of the compound would be CVC and that is not possible in Finnish: every content word has to have at least two vowels.*\r\n\r\nFurther examples: *urheiluopistolla*, *juhannusyönä*, *moottoritietyömaalla*, * ammattikorkeakouluopiskelijayhdistysten*, +\r\n\r\nThe compound splitter must be revised with respect to /uo/ sequences.\r\n#### Split unstressed heavy syllables (5-1-2015)\r\n*This rule is because of stress*. Since we can split these syllables, we do not see the repair in which the stress shifts to an even syllable. (Consider this repair during stress assignment later.) By implementing this at the syllabifier layer, we will not have to repair syllabifications at the stress assignment layer.\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp; tie\r\n&nbsp;&nbsp;&nbsp;&nbsp; da.ni.el, *da.niel\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp; vei\r\n&nbsp;&nbsp;&nbsp;&nbsp; es.se.is.ti, *es.seis.ti\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp; tiu\r\n&nbsp;&nbsp;&nbsp;&nbsp; e.van.ke.li.u.me.ja, *e.van.ke.liu.me.ja\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp; no.vel.lien, \\*no.vel.li.en < *the last syllable is extrametrical*\r\n\r\nExtrametricality does not apply to the various morphemes in a compound -- it only applies to the compound as a whole. Perhaps, all of the stress rules apply in this way.\r\n\r\n**NB**: Here, splitting is occurring where it shouldn't:\r\n\r\n    sosiaaliterapeutti    T1 T4 T6 T7    so.si.aa..li.te.ra.pe.ut.ti    so.si.aa.li.te.ra.peut.ti\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}